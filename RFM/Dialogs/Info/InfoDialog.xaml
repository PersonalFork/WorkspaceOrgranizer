<UserControl
    x:Class="RFM.Dialogs.InfoDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:enums="clr-namespace:RFM.Dialogs.Common"
    x:Name="userControl"
    HorizontalAlignment="Center"
    VerticalAlignment="Center"
    d:DesignHeight="300"
    d:DesignWidth="500"
    Background="{StaticResource DialogContentBackgroundColor}"
    BorderBrush="{StaticResource DialogBorderColor}"
    BorderThickness="1"
    mc:Ignorable="d">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>
        <Grid
            Grid.Row="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            Background="{DynamicResource DialogHeaderBackgroundColor}">
            <TextBlock
                Margin="5,10"
                FontSize="28"
                FontFamily="Segoe UI Light"
                Text="{Binding Title, FallbackValue=Confirm}"
                Foreground="{DynamicResource DialogHeaderForegroundColor}" />
            <Button
                x:Name="btnClose"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Command="{Binding CancelCommand}"
                ToolTip="Close"
                Cursor="Hand">
                <Button.Template>
                    <ControlTemplate>
                        <Border
                            Background="Red"
                            Width="60"
                            Height="60">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="Red" />
                                    <Setter Property="Opacity" Value="0.8" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Opacity" Value="1" />
                                        </Trigger>
                                        <DataTrigger Binding="{Binding CancelText}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CancelText}" Value="">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <ContentControl
                                ContentTemplate="{StaticResource CloseIcon}"
                                Margin="10"
                                Foreground="White" />
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
        <Grid
            Grid.Row="1"
            Width="100"
            Height="100"
            Margin="10px">
            <Image RenderOptions.BitmapScalingMode="HighQuality">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Source" Value="{DynamicResource ImgInfo}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=AlertType}" Value="{x:Static enums:AlertType.Info}">
                                <Setter Property="Source" Value="{StaticResource ImgInfo}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=AlertType}" Value="{x:Static enums:AlertType.Warning}">
                                <Setter Property="Source" Value="{StaticResource ImgWarning}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=AlertType}" Value="{x:Static enums:AlertType.Question}">
                                <Setter Property="Source" Value="{StaticResource ImgQuestion}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=AlertType}" Value="{x:Static enums:AlertType.Error}">
                                <Setter Property="Source" Value="{StaticResource ImgError}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=AlertType}" Value="{x:Static enums:AlertType.Success}">
                                <Setter Property="Source" Value="{StaticResource ImgSuccess}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </Grid>
        <TextBlock
            Grid.Row="1"
            Grid.Column="1"
            Margin="10,20,20,20"
            HorizontalAlignment="Left"
            VerticalAlignment="Center"
            FontFamily="Segoe UI Light"
            MaxWidth="400"
            TextWrapping="Wrap"
            FontSize="20"
            Foreground="{DynamicResource DialogContentForegroundColor}"
            Text="{Binding Message, FallbackValue='Is it done.'}" />
        <StackPanel
            Grid.Row="2"
            Grid.Column="1"
            Margin="10,0,10,10"
            HorizontalAlignment="Right"
            Orientation="Horizontal">
            <Button
                Margin="5,2"
                Cursor="Hand"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="{Binding OkCommand}"
                Content="{Binding OkText, FallbackValue=Ok}"
                IsDefault="True"
                TextOptions.TextFormattingMode="Display" />
        </StackPanel>
    </Grid>
</UserControl>
